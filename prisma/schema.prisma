// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String    @id @default(cuid())
  userId           String    @unique
  name             String
  email            String    @unique
  mobile           String?
  address          String?
  registrationType String?   // e.g., 'delegate', 'workshop', 'membership', 'paper-poster'
  memberType       String?   // e.g., 'member', 'non-member', 'student-member'
  subCategory      String?   // Specific type within registrationType if needed

  // NEW: Add-on fields for Delegates
  purchasedImplantAddon Boolean? @default(false)
  purchasedBanquetAddon Boolean? @default(false)

  // Profile Fields (Keep existing ones)
  workshops        String[]
  hasPaperOrPoster Boolean?  @default(false)
  isMember         Boolean?  @default(false)
  memberId         String?   @unique // For IDA Membership ID

  // Payment Details
  transactionId String?   @unique
  payuId        String?   @unique
  paymentAmount Float?
  paymentStatus String?   // e.g., 'pending', 'success', 'failure'

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model SportRegistration {
  id             String    @id @default(cuid())
  name           String
  age            Int
  mobile         String
  gender         String
  email          String?
  tshirtSize     String
  memberType     String // 'member' or 'non-member' for sports context
  selectedSports String[]
  totalPrice     Float
  photoUrl       String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userId         String?   @unique // Specific ID for sports login (e.g., NIDASPORTZ-101)

  // Payment Details
  transactionId  String?   @unique
  payuId         String?   @unique
  paymentStatus  String?
}

// Counters (Keep existing ones)
model Counter {
  id    String @id @default("user_counter") // For NIDAxxxx IDs
  value Int    @default(99)
}

model MemberCounter {
  id    String @id @default("member_counter") // For IDAMEM-xxxx IDs
  value Int    @default(1000)
}